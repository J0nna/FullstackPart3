{"version":3,"sources":["components/Button.js","components/Person.js","components/Filter.js","components/Persons.js","components/Notification.js","components/Alert.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","onClick","handleClick","text","Person","person","onDelete","name","number","Filter","persons","newFilter","filtered","filter","toLowerCase","includes","map","key","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","Alert","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNewFilter","setMessage","alert","setAlert","useEffect","personsService","initialPhonebook","value","onChange","event","target","preventDefault","some","window","personsObject","found","find","confirm","returnedPerson","setTimeout","catch","error","n","concat","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.72d793ef.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Button = (props) => {\n    return(\n    <button onClick={props.handleClick}>\n      {props.text}\n    </button>\n  )\n}\n\nexport default Button;","import React from 'react';\nimport Button from './Button';\n\nconst Person = ({person, onDelete}) => {\n  return (\n    <p>{person.name} {person.number} \n    <Button handleClick={onDelete} text=\"delete\"/>\n    </p>\n    )\n  }\n\n\nexport default Person;","import React from 'react';\nimport Person from './Person'; \n\n\nconst Filter = ({persons, newFilter, onDelete}) => {\n  const filtered = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n  return(<div>\n    {filtered.map((person) => \n      <Person key={person.name} person={person} onDelete={() => onDelete(person.id)}/>\n    )} \n</div>)\n\n}\n\n\nexport default Filter;","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\n\nconst GetAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst Create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst Update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst Remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\n\n\nexport default { GetAll, Create, Update, Remove }","import React from 'react';\n\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"quickmessage\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification;","import React from 'react';\n\n\nconst Alert = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"alertmessage\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Alert;","import Filter from './components/Filter';\nimport Button from './components/Button';\nimport React, { useState, useEffect } from 'react';\nimport personsService from './components/Persons';\nimport Notification from './components/Notification';\nimport Alert from './components/Alert';\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [alert, setAlert] = useState(null)\n\n  useEffect(() => {\n    personsService\n      .GetAll()\n        .then(initialPhonebook => {\n        setPersons(initialPhonebook)\n      })\n  }, [])\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNewFilter = (event) => {\n    setNewFilter(event.target.value)\n  }\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.some(person => person.name === newName && person.number === newNumber)) {\n      window.alert(`${newName} is already added to phonebook`)\n    }\n    else if (persons.some(person => person.name === newName)) {\n      const personsObject = {\n        name: newName, number: newNumber\n      }\n      const found = persons.find(person => person.name === newName)\n      if (window.confirm(`Do you want to replace ${newName}'s old number with a new one?`)) { \n        personsService\n        .Update(found.id, personsObject)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== found.id ? person : returnedPerson))\n          setMessage(\n            `${newName}'s number changed!`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setAlert(\n            `the person '${newName}' was already deleted from server`\n          )\n          setTimeout(() => {\n            setAlert(null)\n          }, 5000)\n          setPersons(persons.filter(n => n.id !== found.id))\n        })\n        setNewName('')\n        setNewNumber('')\n    }}\n\n    else {\n      const personsObject = {\n        name: newName, number: newNumber\n      }\n      personsService\n      .Create(personsObject)\n        .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setMessage(\n          `${newName} added to phonebook!`\n        )\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n        setNewName('')\n      })\n      setNewNumber('')\n    }\n  }\n\n  const removePerson = (id) => {\n    const found = persons.find(person => person.id === id)\n      if(window.confirm(`Delete ${found.name}?`)) {\n        personsService\n          .Remove(id)\n          .then(returnedPerson => {\n            setPersons(persons.filter(n => n.id !== id))\n            setMessage(\n              `${found.name} deleted!`\n            )\n            setTimeout(() => {\n              setMessage(null)\n              }, 5000)\n          })\n          .catch(error => {\n            setAlert(\n              `the person '${found.name}' was already deleted from server`\n            )})\n            setTimeout(() => {\n              setAlert(null)\n            }, 5000)\n            setPersons(persons.filter(n => n.id !== id))\n      }\n        \n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <Alert message={alert} />\n      <h2>Filter</h2>\n      <form>\n        <div>\n            filter with: <input value={newFilter}\n            onChange={handleNewFilter} />\n        </div>\n      </form>\n      <h2>Add new</h2>\n      <form>\n        <div>\n          name: <input value={newName}\n          onChange={handleNewName} />\n        </div>\n        <div>number: <input value={newNumber}\n        onChange={handleNewNumber}/></div>\n        <div>\n          <Button handleClick={addPerson} text=\"add\"/>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n    <div>\n      <Filter persons={persons} newFilter={newFilter} onDelete={removePerson}/>\n    </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}